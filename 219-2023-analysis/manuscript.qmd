---
title: "Replication of Brydevall et al. 2018"
author: "Josh de Leeuw"
format: 
  html:
    df-print: kable
editor: visual
---

```{r}
#| label: Load libraries
#| echo: false
#| message: false
#| warning: false

library(dplyr)
library(ggplot2)
library(readr)
library(ez)
library(osfr)
```

```{r}
#| label: Get preprocessed data from OSF
#| include: false
#| echo: false

osf_retrieve_node("2pxf4") %>%
  osf_ls_files() %>%
  osf_download(path="data/preprocessed/", conflicts="skip")
```

## Methods

```{r}
#| label: Load the Behavioral Data
#| echo: false
#| message: false


data.behavioral <- read_csv("data/preprocessed/behavioral.csv")
```

### Participants

```{r}
#| label: Count participants
#| echo: false

n.participants <- data.behavioral %>% pull(subject) %>% unique() %>% length()
```

`r n.participants` Vassar College students participated in this study. All participants were right-handed.

## Results

### Behavioral

```{r}
#| label: Attention check calculations
#| echo: false

attention.check.responses <- data.behavioral %>%
  filter(task=="catch", phase=="test", card_id == catch_n) %>%
  group_by(subject) %>%
  summarize(successes = sum(rt < 1500, na.rm=TRUE), mean_rt = mean(rt, na.rm=TRUE))

attention.check.tally <- attention.check.responses %>% group_by(successes) %>% summarize(n=n())

attention.check.rt.m <- attention.check.responses %>% pull(mean_rt) %>%
  mean() %>% round(0)
attention.check.rt.sd <- attention.check.responses %>% pull(mean_rt) %>%
  sd() %>% round(0)


attention.check.failures <- attention.check.responses %>% filter(successes < 3)
```

There were five attention check trials, one during each block, throughout the experiment. `r attention.check.tally %>% filter(successes==5) %>% pull(n)` of `r n.participants` responded in time to all 5 attention checks, and `r attention.check.tally %>% filter(successes==4) %>% pull(n)` responded correctly to 4 of the 5 attention checks. The average response time was `r attention.check.rt.m`ms (*SD* = `r attention.check.rt.sd`). As per our pre-registered criteria, we excluded `r nrow(attention.check.failures)` participants for failing more than 2 attention checks (defined as a response time greater than 1,500ms).

```{r}
#| label: Compute RPEs and IPEs
#| echo: false
#| message: false

hand.information <- data.behavioral %>% 
  filter(phase=='test', task=='reveal') %>%
  group_by(subject) %>%
  mutate(hand_id = rep(1:80, each=5)) %>%
  ungroup() %>%
  mutate(losses_so_far = (card_id-1) - wins_so_far) %>%
  select(subject, hand_id, card_id, card_value, wins_so_far, losses_so_far, outcome)

hand.information.with.rpe <- hand.information %>%
  mutate(
    wp_before = pbinom(2-losses_so_far, 5-(card_id-1), 0.5), 
    wp_after = pbinom(2-(losses_so_far+(1-card_value)), 5-card_id, 0.5), 
    rpe = wp_after-wp_before)

entropy <- function(p){
  return(ifelse(p == 0 | p == 1, 0, -p*log2(p) - (1-p)*log2(1-p)))
}

hand.information.with.rpe.and.ipe <- hand.information.with.rpe %>%
  mutate(wp_alternative = pbinom(2-(losses_so_far+card_value), 5-card_id, 0.5)) %>%
  mutate(information = entropy(wp_before) - entropy(wp_after),
         information_alt = entropy(wp_before) - entropy(wp_alternative),
         information_expected = (information + information_alt) / 2,
         ipe = information - information_expected) %>%
  mutate(rpe_type = case_when(
    rpe > 0 ~ "Positive",
    rpe < 0 ~ "Negative",
    rpe == 0 ~ "None")) %>%
  mutate(ipe_type = case_when(
    ipe > 0 ~ "Positive",
    ipe < 0 ~ "Negative",
    ipe == 0 ~ "None"))
```

### EEG

```{r}
#| label: Load EEG data
#| echo: false
#| message: false

data.eeg <- read_csv('data/preprocessed/eeg.csv')

```

```{r}
#| label: Filter EEG data
#| echo: false

data.eeg.filtered <- data.eeg %>%
  filter(good_segment == TRUE) %>%
  filter(electrode %in% c("Cz", "Fz"))

```

```{r}
#| label: Merge RPE and IPE info into EEG data
#| echo: false
#| message: false

data.eeg.filtered.rpe.ipe <- data.eeg.filtered %>%
  left_join(hand.information.with.rpe.and.ipe, by=c("subject", "hand_id", "card_id"))

```

```{r}
#| label: Count usable segments for RPEs
#| echo: false
#| message: false

rpe.segments <- data.eeg.filtered.rpe.ipe %>%
  filter(rpe_type != "None") %>%
  group_by(subject, electrode, hand_id, card_id, rpe_type) %>%
  slice_head(n=1) %>%
  group_by(subject, electrode, rpe_type) %>%
  summarize(n=n())
```

```{r}
#| label: Count usable segments for IPEs
#| echo: false
#| message: false

ipe.segments <- data.eeg.filtered.rpe.ipe %>%
  filter(ipe_type != "None") %>%
  group_by(subject, electrode, hand_id, card_id, ipe_type) %>%
  slice_head(n=1) %>%
  group_by(subject, electrode, ipe_type) %>%
  summarize(n = n())
```

```{r}
#| label: Exclude bad EEG
#| echo: false

bad.eeg.subjects <- rpe.segments %>% 
  filter(n < 20) %>% 
  bind_rows(ipe.segments %>% filter(n < 20)) %>%
  pull(subject) %>%
  unique()
```

We pre-registered an inclusion criteria that a participant must have at least 20 usable epochs of data of a particular event type in order to be included in the corresponding analyses. `r bad.eeg.subjects %>% length()` subjects were excluded for having fewer than 20 usable epochs in all event types. Of the remaining subjects, the average number of usable epochs for the RPE analysis in an individual subject was `r rpe.segments %>% filter(!subject %in% bad.eeg.subjects) %>% pull(n) %>% mean() %>% round(0)`, *SD*=`r rpe.segments %>% filter(!subject %in% bad.eeg.subjects) %>% pull(n) %>% sd() %>% round(0)`. The average number of usable epochs for the IPE analysis was `r ipe.segments %>% filter(!subject %in% bad.eeg.subjects) %>% pull(n) %>% mean() %>% round(0)`, *SD*=`r ipe.segments %>% filter(!subject %in% bad.eeg.subjects) %>% pull(n) %>% sd() %>% round(0)`.

```{r}
#| label: Define ERP time window
#| echo: false

frn.window <- 200:350
```

```{r}
#| label: Generate data for Grand Averages
#| echo: false
#| message: false

rpe.erp.data.subject <- data.eeg.filtered.rpe.ipe %>%
  filter(rpe_type != "None") %>%
  filter(!subject %in% bad.eeg.subjects) %>%
  group_by(subject, electrode, t, rpe_type) %>%
  summarize(m.subject = mean(v))

rpe.erp.data.group <- rpe.erp.data.subject %>%
  group_by(electrode, t, rpe_type) %>%
  summarize(m = mean(m.subject), se = sd(m.subject)/sqrt(n())) %>%
  mutate(error_type = "Reward Prediction Error", error_sign = rpe_type)

ipe.erp.data.subject <- data.eeg.filtered.rpe.ipe %>%
  filter(ipe_type != "None") %>%
  filter(!subject %in% bad.eeg.subjects) %>%
  group_by(subject, electrode, t, ipe_type) %>%
  summarize(m.subject = mean(v))

ipe.erp.data.group <- ipe.erp.data.subject %>%
  group_by(electrode, t, ipe_type) %>%
  summarize(m = mean(m.subject), se = sd(m.subject)/sqrt(n())) %>%
  mutate(error_type = "Information Prediction Error", error_sign = ipe_type)

erp.data <- rpe.erp.data.group %>% bind_rows(ipe.erp.data.group) %>%
  select(-rpe_type, -ipe_type)

```

```{r}
#| label: fig-grand-averages
#| echo: false
#| fig-cap: Grand average ERPs for both electrode sites (Cz, Fz) and both error types (Information Prediction and Reward Prediction). The critical time window for our analysis, 200-350ms, is highlighted.

ggplot(erp.data, aes(x=t, y=m, ymin=m-se, ymax=m+se, color=error_sign, fill=error_sign))+
  facet_grid(error_type ~ electrode)+
  geom_hline(yintercept = 0)+
  geom_vline(xintercept = 0)+
  annotate("rect", xmin=min(frn.window), xmax=max(frn.window), ymin=-Inf, ymax=Inf, alpha=0.4)+
  geom_ribbon(color=NA, alpha = 0.2)+
  geom_line()+
  scale_y_reverse()+
  scale_color_brewer(type="qual", palette = "Set1", name="Error Direction")+
  scale_fill_brewer(type="qual", palette = "Set1", name="Error Direction")+
  labs(x="Time since card value revealed (ms)", y="Microvolts")+
  theme_minimal()+
  theme(panel.grid = element_blank())

```

```{r}
#| label: Compute ANOVA data
#| echo: false
#| message: false

rpe.anova.data <- rpe.erp.data.subject %>%
  filter(t %in% frn.window) %>%
  group_by(subject, electrode, rpe_type) %>%
  summarize(M = mean(m.subject))

ipe.anova.data <- ipe.erp.data.subject %>%
  filter(t %in% frn.window) %>%
  group_by(subject, electrode, ipe_type) %>%
  summarize(M = mean(m.subject))
```

```{r}
#| label: RPE ANOVA
#| echo: false
#| warning: false

rpe.anova <- ezANOVA(rpe.anova.data, dv=M, wid=subject, within=c(electrode, rpe_type))

rpe.anova$ANOVA
```

```{r}
#| label: IPE ANOVA
#| echo: false
#| warning: false

ipe.anova <- ezANOVA(ipe.anova.data, dv=M, wid=subject, within=c(electrode, ipe_type))

ipe.anova$ANOVA
```
